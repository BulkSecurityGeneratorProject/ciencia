/**
 * CONVOCATORIA
 */
entity Convocatoria {
    nombre String,
    clave String,
    annioFiscal Integer
}

entity Solicitud {
    clave String
}

entity EtapaSolicitud {
    nombre String,
    descripcion String
}

entity EstadoSolicitud {
    nombre String,
    descripcion String
}

entity Modalidad {
    nombre String,
    descripcion String,
    montoMaximo Double,
    duracion Integer,
    numeroEtapas Integer,
    fechaInicio LocalDate,
    fechaFin LocalDate
}

entity TipoConvocatoria {
    clave String,
    descripcion String
}

entity MetaEtapa {
    numero Integer,
    prefijo String
}

relationship ManyToOne {
    MetaEtapa to Convocatoria,
    Convocatoria to TipoConvocatoria,
    Solicitud to Convocatoria,
    Solicitud{etapa} to EtapaSolicitud,
    Solicitud{estado} to EstadoSolicitud,
    Rubro to TipoGasto
}

relationship ManyToMany {
    MetaEtapa{rubros} to Rubro,
    Convocatoria{modalidades} to Modalidad
}

/**
 * https://stackoverflow.com/questions/33334746/using-inheritance-on-jhipster-entities
 * PROYECTO
 */

entity Proyecto {
    multidisciplinario Boolean,
    palabrasclave String,
    tituloEs TextBlob,
    tituloEn TextBlob,
    resumenEs TextBlob,
    resumenEn TextBlob,
    objetivoGeneral TextBlob,
    antecedentes TextBlob,
    descripcion TextBlob,
    hipotesis TextBlob,
    metodologia TextBlob,
    resultados TextBlob,
    mecanismos TextBlob,
    acciones TextBlob,
    bibliografia TextBlob
}

entity RegistroPersona {
    catedratico Boolean
}

entity RolPersona {
    nombre String,
    descripcion String
}

entity RolInstitucion {
    nombre String,
    descripcion String
}


relationship OneToOne {
    Proyecto{solicitud} to Solicitud{proyecto}    
}

relationship ManyToOne {
    Proyecto to Modalidad,
    Documento to Proyecto,
    Etapa to Proyecto,
    ObjetivoEspecifico to Proyecto,
    EtapaObjetivo to Proyecto,
    Meta to Proyecto,
    Actividad to Proyecto,
    Produccion to Proyecto,
    Gasto to Proyecto,
    AreaDeConocimiento to Proyecto,
    PropuestaEvaluador to Proyecto,
    RegistroEvaluador to Proyecto,
    RegistroPersona to Proyecto,
    RegistroPersona to PersonaFisica,
    RegistroPersona to RolPersona,
    RegistroEvaluador to RolInstitucion
}

/**
 * DOCUMENTO
 */

entity Documento {
    contenido Blob
}

entity TipoDocumento {
    nombre String,
    descripcion String
}

entity Plantilla {
    nombre String,
    descripcion String,
    contenido TextBlob
}

entity PersonaDocumento {

}

relationship ManyToOne {
    Documento to Plantilla,
    Documento to TipoDocumento,
    Documento to EtapaSolicitud,
    Documento to Proyecto,
    PersonaDocumento to Proyecto,
    PersonaDocumento to PersonaFisica,
    PersonaDocumento to RolPersona,
    PersonaDocumento to Documento,
    PersonaDocumento to EtapaSolicitud
}
 
relationship OneToOne {
    PersonaDocumento{firma} to FirmaElectronica
}

/**
 * PERSONA
 */

entity PersonaFisica {
    cvu String,
    titulo String,
    nombre String,
    rfc String,
    curp String,
    genero String,
    correo String,
    nivelsni String,
    rcea String,
    apellidoPaterno String,
    apellidoMaterno String
}

entity Domicilio {
    direccion String
}

entity TipoDomicilio {
    nombre String,
    descripcion String
}

entity PersonaMoral {
    razonSocial String,
    reniecyt String,
    domicilio String
}

relationship ManyToOne {
    PersonaFisica to Pais,
    PersonaFisica to Genero,
    PersonaFisica to GradoAcademico,
    PersonaFisica to EntidadFederativa,
    Domicilio to PersonaFisica,
    Domicilio to TipoDomicilio,
    PersonaMoral to EntidadFederativa
}

relationship ManyToMany {
    PersonaFisica{instituciones} to PersonaMoral,
    PersonaMoral{replegales} to PersonaFisica
}

relationship OneToOne {
    PersonaFisica{login} to User
}

/**
 * PLAN DE TRABAJO
 */

entity Etapa {
    numeroEtapa Integer,
    nombre String,
    descripcion TextBlob,
    duracion Integer
}

entity ObjetivoEspecifico {
    nombre String,
    descripcion TextBlob
}

entity EtapaObjetivo {

}

entity Meta {
    nombre String,
    descripcion TextBlob
}

entity Actividad {
    nombre String,
    descripcion TextBlob
}

entity Produccion {
    otroProducto String
}

entity TipoProducto {
    nombre String,
    descripcion String
}

relationship ManyToOne {
    EtapaObjetivo to Etapa,
    EtapaObjetivo to ObjetivoEspecifico,
    Meta to EtapaObjetivo,
    Actividad to Meta,
    Produccion to Actividad,
    Produccion to TipoProducto,
    Produccion to PersonaFisica
}

/**
 * DESGLOSE FINANCIERO
*/

entity Gasto {
    importe Double,
    justificacion TextBlob
}

entity TipoRecurso {
    nombre String,
    descripcion String
}

entity TipoGasto {
    nombre String,
    descripcion String
}

entity Rubro {
    nombre String,
    descripcion String
}

relationship ManyToOne {
    Gasto to Etapa,
    Gasto to TipoRecurso,
    Gasto to TipoGasto,
    Gasto to Rubro,
    Gasto to PersonaMoral
}
/**
 * EVALUADOR
 */
entity RegistroEvaluador {

}

entity PropuestaEvaluador {
    cvu String,
    titulo String,
    nombre String,
    rfc String,
    curp String,
    genero String,
    correo String,
    nivelsni String,
    rcea String,
    apellidoPaterno String,
    apellidoMaterno String,
    idCampo Long,
    campo String,
    idDisciplina Long,
    disciplina String,
    idSubdisciplina Long,
    subdisciplina String,
    especialidad String
}

entity EstadoAsignacion {
    nombre String,
    descripcion String
}

relationship ManyToOne {
    RegistroEvaluador to EstadoAsignacion,
    RegistroEvaluador to Proyecto,
    RegistroEvaluador{evaluador} to PersonaFisica
}
/**
 * FIRMA ELECTRONICA
 */
entity FirmaElectronica {
    cadenaOriginal String,
    selloDigital String,
    certificado Blob,
    fechaFirma LocalDate
}

entity TipoFirma {
    nombre String,
    descripcion String
}

relationship ManyToOne {
    FirmaElectronica{tipo} to TipoFirma
}

/**
 * NOTIFICACION
 */
 
entity Notificacion {
    mensaje TextBlob,
    remitente String,
    fechaEnvio LocalDate
}

entity TipoNotificacion {
    nombre String,
    descripcion String,
    plantilla TextBlob
}

entity EstadoNotificacion {
    nombre String,
    descripcion String
}

relationship ManyToOne {
    Notificacion to TipoNotificacion,
    Notificacion to EstadoNotificacion,
    Notificacion to Solicitud,
    Notificacion{destinatario} to PersonaFisica,
    Notificacion{cc} to PersonaFisica,
    Notificacion to EtapaSolicitud
}
/**
 * SEGURIDAD
 */
entity ClaveSimple {
    masterKey String,
    password String
}

relationship OneToOne {
    ClaveSimple{usuario} to User
}

/**
 * OTROS CAT√ÅLOGOS
 */

entity AreaDeConocimiento {
    idArea Long,
    area String,
    idCampo Long,
    campo String,
    idDisciplina Long,
    disciplina String,
    idSubdisciplina Long,
    subdisciplina String,
    especialidad String
}

entity Pais{
    nombre String,
    descripcion String
}

entity EntidadFederativa {
    nombre String,
    descripcion String
}

entity Genero {
    nombre String,
    descripcion String
}

entity GradoAcademico {
    nombre String,
    descripcion String
}


