/**
 * CONVOCATORIA
 */
entity Convocatoria {
    nombre String minlength(5)  maxlength(20),
    clave String unique minlength(5)  maxlength(20),
    annioFiscal Integer  min(2019),
    activated Boolean
}

entity Solicitud {
    clave String unique,
    activated Boolean
}

entity EtapaSolicitud {
    nombre String,
    descripcion String,
    activated Boolean
}

entity EstadoSolicitud {
    nombre String,
    descripcion String,
    activated Boolean
}

entity Modalidad {
    nombre String,
    descripcion String,
    montoMaximo Double,
    duracion Integer,
    numeroEtapas Integer,
    fechaInicio LocalDate,
    fechaFin LocalDate,
    activated Boolean
}

entity TipoConvocatoria {
    clave String unique,
    descripcion String,
    activated Boolean
}

entity MetaEtapa {
    numero Integer min(1) max(10),
    prefijo String minlength(3) maxlength(20)
}

/**
 * https://stackoverflow.com/questions/33334746/using-inheritance-on-jhipster-entities
 * PROYECTO
 */

entity Proyecto {
    multidisciplinario Boolean,
    palabrasclave String,
    tituloEs TextBlob required,
    tituloEn TextBlob required,
    resumenEs TextBlob required,
    resumenEn TextBlob required,
    objetivoGeneral TextBlob required,
    antecedentes TextBlob required,
    descripcion TextBlob required,
    hipotesis TextBlob required,
    metodologia TextBlob required,
    resultados TextBlob required,
    mecanismos TextBlob required,
    acciones TextBlob required,
    bibliografia TextBlob required,
    activated Boolean
}

entity RegistroPersona {
    catedratico Boolean
}

entity RolPersona {
    nombre String minlength(5) maxlength(50),
    descripcion String minlength(5) maxlength(100),
    activated Boolean
}

entity RolInstitucion {
    nombre String minlength(2) maxlength(50),
    descripcion String minlength(5) maxlength(100),
    activated Boolean
}

/**
 * DOCUMENTO
 */

entity Documento {
    contenido Blob,
    activated Boolean
}

entity TipoDocumento {
    nombre String minlength(2) maxlength(50),
    descripcion String minlength(5) maxlength(100),
    activated Boolean
}

entity Plantilla {
    nombre String minlength(2) maxlength(50),
    descripcion String minlength(5) maxlength(100),
    contenido TextBlob,
    activated Boolean
}

entity PersonaDocumento {

}

/**
 * PERSONA
 */

entity PersonaFisica {
    cvu String unique,
    titulo String,
    nombre String,
    rfc String unique,
    curp String unique,
    correo String,
    nivelsni String,
    rcea String,
    apellidoPaterno String,
    apellidoMaterno String,
    activated Boolean
}

entity Domicilio {
    direccion String,
    tipo String,
    activated Boolean
}

entity PersonaMoral {
    rfc String unique,
    razonSocial String,
    reniecyt String unique,
    domicilio String,
    activated Boolean
}

entity Institucion {
    clave Long unique,
    nombre String,
    localidad String,
    municipio String,
    activated Boolean
}

/**
 * PLAN DE TRABAJO
 */

entity Etapa {
    numeroEtapa Integer,
    nombre String maxlength(50),
    descripcion TextBlob required,
    duracion Integer required,
    activated Boolean
}

entity ObjetivoEspecifico {
    nombre String maxlength(50),
    descripcion TextBlob required,
    activated Boolean
}

entity EtapaObjetivo {

}

entity Meta {
    nombre String minlength(2) maxlength(50),
    descripcion TextBlob required,
    activated Boolean
}

entity Actividad {
    nombre String minlength(5) maxlength(50),
    descripcion TextBlob required,
    activated Boolean
}

entity Produccion {
    otroProducto String,
    activated Boolean
}

entity TipoProducto {
    nombre String,
    descripcion String,
    activated Boolean
}

/**
 * DESGLOSE FINANCIERO
*/

entity Gasto {
    importe Double,
    justificacion TextBlob,
    activated Boolean
}

entity TipoRecurso {
    nombre String,
    descripcion String,
    activated Boolean
}

entity TipoGasto {
    nombre String,
    descripcion String,
    activated Boolean
}

entity Rubro {
    nombre String minlength(2) maxlength(100),
    descripcion String,
    activated Boolean
}

/**
 * EVALUADOR
 */
entity RegistroEvaluador {

}

entity PropuestaEvaluador {
    cvu String,
    titulo String,
    nombre String,
    rfc String,
    curp String,
    genero String,
    correo String required pattern(/^[^@\s]+@[^@\s]+\.[^@\s]+$/),
    nivelsni String,
    rcea String,
    apellidoPaterno String,
    apellidoMaterno String,
    idCampo Long,
    campo String,
    idDisciplina Long,
    disciplina String,
    idSubdisciplina Long,
    subdisciplina String,
    especialidad String,
    activated Boolean
}

entity EstadoAsignacion {
    nombre String,
    descripcion String,
    activated Boolean
}

/**
 * FIRMA ELECTRONICA
 */
entity FirmaElectronica {
    cadenaOriginal String,
    selloDigital String,
    certificado Blob,
    fechaFirma LocalDate,
    activated Boolean
}

entity TipoFirma {
    nombre String,
    descripcion String,
    activated Boolean
}

/**
 * NOTIFICACION
 */
 
entity Notificacion {
    mensaje TextBlob,
    remitente String,
    cc String,
    fechaEnvio LocalDate,
    activated Boolean
}

entity TipoNotificacion {
    nombre String,
    descripcion String,
    plantilla TextBlob,
    activated Boolean
}

entity EstadoNotificacion {
    nombre String,
    descripcion String,
    activated Boolean
}

/**
 * SEGURIDAD
 */
entity ClaveSimple {
    masterKey String,
    password String required pattern(/^[^@\s]+@[^@\s]+\.[^@\s]+$/),
    activated Boolean
}

/**
 * OTROS CAT√ÅLOGOS
 */

entity AreaDeConocimiento {
    idArea Long,
    area String,
    idCampo Long,
    campo String,
    idDisciplina Long,
    disciplina String,
    idSubdisciplina Long,
    subdisciplina String,
    especialidad String
}

entity Pais{
    nombre String,
    descripcion String,
    activated Boolean
}

entity EntidadFederativa {
    nombre String,
    descripcion String,
    activated Boolean
}

entity Genero {
    nombre String,
    descripcion String,
    activated Boolean
}

entity GradoAcademico {
    nombre String,
    descripcion String,
    activated Boolean
}


/**
 * RELATIONSHIPS
 */
relationship OneToOne {
    Proyecto{solicitud} to Solicitud{proyecto},
    PersonaDocumento{firma} to FirmaElectronica,
    PersonaFisica{login} to User,
    ClaveSimple{usuario} to User
}

relationship ManyToOne {
    MetaEtapa{convocatoriasDefinicion} to Convocatoria{metaEtapas},
    Convocatoria to TipoConvocatoria,
    Solicitud to Convocatoria,
    Solicitud{etapa} to EtapaSolicitud,
    Solicitud{estado} to EstadoSolicitud,
    Proyecto{modalidad} to Modalidad,
    AreaDeConocimiento to Proyecto,
    PropuestaEvaluador to Proyecto,
    RegistroEvaluador to Proyecto,
    RegistroEvaluador to EstadoAsignacion,
    RegistroEvaluador{evaluador} to PersonaFisica,    
    RegistroPersona to Proyecto,
    RegistroPersona to PersonaFisica,
    RegistroPersona to PersonaMoral,
    RegistroPersona to Institucion,
    RegistroPersona to RolPersona,
    RegistroPersona to RolInstitucion,
    Documento to Proyecto,
    Documento to Plantilla,
    Documento to TipoDocumento,
    Documento to EtapaSolicitud,
    PersonaDocumento to Documento,
    PersonaDocumento to Proyecto,
    PersonaDocumento to PersonaFisica,
    PersonaDocumento to RolPersona,
    PersonaDocumento to EtapaSolicitud,
    PersonaFisica{pais} to Pais,
    PersonaFisica{genero} to Genero,
    PersonaFisica{grado} to GradoAcademico,
    PersonaFisica{entidadFederativa} to EntidadFederativa,
    Domicilio to PersonaFisica,
    PersonaMoral{entidad} to EntidadFederativa,
    Etapa to Proyecto,
    ObjetivoEspecifico to Proyecto,
    EtapaObjetivo to Etapa,
    EtapaObjetivo to ObjetivoEspecifico,
    EtapaObjetivo to Proyecto,
    Meta to Proyecto,
    Meta to EtapaObjetivo,
    Actividad to Meta,
    Actividad to Proyecto,
    Produccion to Actividad,
    Produccion to Proyecto,
    Produccion to TipoProducto,
    Rubro to TipoGasto,
    Gasto to Proyecto,
    Gasto to Etapa,
    Gasto to TipoRecurso,
    Gasto to TipoGasto,
    Gasto to Rubro,
    Gasto to PersonaMoral,
    FirmaElectronica{tipo} to TipoFirma,
    Notificacion to TipoNotificacion,
    Notificacion to EstadoNotificacion,
    Notificacion to Solicitud,
    Notificacion{destinatario} to PersonaFisica,
    Notificacion to EtapaSolicitud,
    Institucion to EntidadFederativa
}

relationship ManyToMany {
    MetaEtapa{rubros} to Rubro{defEtapas},
    Convocatoria{modalidades} to Modalidad{convocatorias},
    PersonaFisica{instituciones} to Institucion{adscritos},
    PersonaMoral{representantesLegales} to PersonaFisica{institucionesRepresentante},
    Produccion{responsables} to PersonaFisica{producciones}
}


paginate * with pagination
service Convocatoria, Solicitud, Proyecto, RegistroPersona, PersonaDocumento, PersonaFisica, Etapa, Gasto, RegistroEvaluador, Notificacion, FirmaElectronica with serviceImpl
